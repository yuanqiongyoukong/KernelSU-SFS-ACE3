name: 构建KernelSU
on:
  workflow_dispatch:
    inputs:
      KSU:
        description: "设置 KernelSU"
        required: true 
        type: boolean
        default: true 
      KSU_VERSION:
        description: "ksu版本"
        required: true 
        type: choice
        options:
          - ksu
          - mksu
          - rksu
          - sukisu
      BRANCH_CONFIG:
        description: "分支配置"
        required: false 
        type: choice
        options:
          - tag
          - main
      SUSFS:
        description: "设置 SUSFS"
        required: true 
        type: boolean
        default: true 
      KPM:
        type: boolean
        description: "是否启用KPM？"
        required: true 
        default: true 
      HIDE:
        type: boolean
        description: "是否启用隐藏补丁？"
        required: true 
        default: true 
      VFS:
        type: boolean
        description: "是否启用手动钩子？"
        required: true 
        default: true 
      ZRAM:
        type: boolean
        description: "是否启用添加更多的ZRAM算法？"
        required: true 
        default: true 
      KERNEL_NAME:
        description: "自定义内核版本号"
        required: false 
        default: ''

env:
  CPU: sm8550
  FEIL: oneplus_ace3_v
  CPUD: kalama
  ANDROID_VERSION: android13
  KERNEL_VERSION: 5.15
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 最大化构建空间
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 16384
        temp-reserve-mb: 2048
        swap-size-mb: 8192
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        
    - name: 初始化编译环境
      run: |
        git config --global user.name "yuanqiongyoukong"
        git config --global user.email "413722718@qq.com"
        sudo apt update && sudo apt upgrade -y && sudo apt install -y python3 git curl
        curl -o ~/repo https://storage.googleapis.com/git-repo-downloads/repo
        chmod a+x ~/repo
        sudo mv ~/repo /usr/local/bin/repo
        
    - name: 拉取内核清单
      run: |
        mkdir kernel_workspace && cd kernel_workspace
        repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${CPU} -m ${FEIL}.xml --depth=1
        repo sync -c -j$(nproc --all) --no-tags
        git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
        rm -rf ./AnyKernel3/.git
        git clone https://github.com/yuanqiongyoukong/kernelsu_patch.git --depth 1
        cd kernel_platform
        rm -f ./common/android/abi_gki_protected_exports_* ./msm-kernel/android/abi_gki_protected_exports_* 2>/dev/null || echo "No protected exports found!"
        sed -i 's/ -dirty//g' ./common/scripts/setlocalversion ./msm-kernel/scripts/setlocalversion ./external/dtc/scripts/setlocalversion
        sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' ./common/scripts/setlocalversion
        if [ -n "${{ github.event.inputs.KERNEL_NAME }}" ]; then
          sed -i '$s|echo "\$res"|echo "-${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
        fi
        
    - name: 设置 KernelSU
      if: github.event.inputs.KSU == 'true' && github.event.inputs.KSU_VERSION == 'ksu'
      run: |
        cd kernel_workspace/kernel_platform
        if [[ "${{ github.event.inputs.BRANCH_CONFIG }}" == "tag" ]]; then
          echo "BRANCH=-" >> $GITHUB_ENV
        elif [[ "${{ github.event.inputs.BRANCH_CONFIG }}" == "main" ]]; then
          echo "BRANCH=-s main" >> $GITHUB_ENV
        fi
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
        cd KernelSU
        KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
        sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
    - name: 设置 MKSU
      if: github.event.inputs.KSU == 'true' && github.event.inputs.KSU_VERSION == 'mksu'
      run: |
        cd kernel_workspace/kernel_platform
        echo "BRANCH=-" >> $GITHUB_ENV
        curl -LSs "https://raw.githubusercontent.com/5ec1cff/KernelSU/refs/heads/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
        cd KernelSU
        KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
        sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
    - name: 设置 RKSU
      if: github.event.inputs.KSU == 'true' && github.event.inputs.KSU_VERSION == 'rksu'
      run: |
        cd kernel_workspace/kernel_platform
        if [[ "${{ github.event.inputs.SUSFS }}" == "true" ]]; then
          echo "BRANCH=-s susfs-v1.5.7" >> $GITHUB_ENV
        else
          echo "BRANCH=-s main" >> $GITHUB_ENV
        fi
        curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
        cd KernelSU
        KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
        sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
    - name: 设置 SukiSU
      if: github.event.inputs.KSU == 'true' && github.event.inputs.KSU_VERSION == 'sukisu'
      run: |
        cd kernel_workspace/kernel_platform
        if [[ "${{ github.event.inputs.SUSFS }}" == "true" ]]; then
          echo "BRANCH=-s susfs-dev" >> $GITHUB_ENV
        else
          echo "BRANCH=-s main" >> $GITHUB_ENV
        fi
        curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
        cd ./KernelSU
        KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
        export KSU_VERSION=$KSU_VERSION
        sed -i "s/DKSU_VERSION=12500/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
    - name: 设置 SUSFS
      if: github.event.inputs.SUSFS == 'true'
      run: |
        cd kernel_workspace
        git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${ANDROID_VERSION}-${KERNEL_VERSION} --depth 1
        cd kernel_platform
        cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
        cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

    - name: KSU 补丁
      if: github.event.inputs.SUSFS == 'true' && github.event.inputs.KSU_VERSION == 'ksu'
      run: |
        cd kernel_workspace/kernel_platform
        cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU/
        cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch ./common/
        # 应用补丁
        cd ./KernelSU
        patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
        cd ../common
        patch -p1 < 50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch || true
        
    - name: MKSU 补丁
      if: github.event.inputs.SUSFS == 'true' && github.event.inputs.KSU_VERSION == 'mksu'
      run: |
        cd kernel_workspace/kernel_platform
        cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU/
        cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch ./common/
        cp ../kernelsu_patch/mksu/mksu_susfs.patch ./KernelSU/
        cp ../kernelsu_patch/mksu/fix.patch ./KernelSU/
        cp ../kernelsu_patch/mksu/vfs_fix.patch ./KernelSU/
        # 应用补丁
        cd ./KernelSU
        git revert -m 1 $(git log --grep="remove devpts hook" --pretty=format:"%H") -n
        patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
        patch -p1 --forward < mksu_susfs.patch || true
        patch -p1 --forward < fix.patch || true
        patch -p1 --forward < vfs_fix.patch || true
        cd ../common
        patch -p1 < 50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch || true
        
    - name: RKSU 补丁
      if: github.event.inputs.SUSFS == 'true' && github.event.inputs.KSU_VERSION == 'rksu'
      run: |
        cd kernel_workspace/kernel_platform
        cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch ./common/
        # 应用补丁
        cd ./common
        patch -p1 -f < 50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch || true
        
    - name: SukiSU 补丁
      if: github.event.inputs.SUSFS == 'true' && github.event.inputs.KSU_VERSION == 'sukisu'
      run: |
        cd kernel_workspace/kernel_platform
        cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch ./common/
        # 应用补丁
        cd ./common
        patch -p1 < 50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch || true
        
    - name: KPM 补丁
      if: github.event.inputs.KPM == 'true' && github.event.inputs.KSU_VERSION == 'sukisu'
      run: |
        cd kernel_workspace/kernel_platform
        echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
        
    - name: Hide Stuff 补丁
      if: github.event.inputs.HIDE == 'true'
      run: |
        cd kernel_workspace/kernel_platform/common
        cp ../../kernelsu_patch/69_hide_stuff.patch ./
        patch -p1 -F 3 < 69_hide_stuff.patch
        
    - name: VFS 补丁
      if: github.event.inputs.VFS == 'true'
      run: |
        cd kernel_workspace/kernel_platform
        echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
        cd ./common
        cp ../../kernelsu_patch/hooks/syscall_hooks.patch ./
        patch -p1 -F 3 < syscall_hooks.patch
        
    - name: ZRAM 补丁
      if: github.event.inputs.ZRAM == 'true'
      run: |
        cd kernel_workspace/kernel_platform
        cp -r ../kernelsu_patch/zram/lz4k/include/linux/* ./common/include/linux
        cp -r ../kernelsu_patch/zram/lz4k/lib/* ./common/lib
        cp -r ../kernelsu_patch/zram/lz4k/crypto/* ./common/crypto
        cp -r ../kernelsu_patch/zram/lz4k_oplus ./common/lib/
        cd ./common
        cp ../../kernelsu_patch/zram/zram_patch/lz4kd.patch ./
        patch -p1 -F 3 < lz4kd.patch || true
        cp ../../kernelsu_patch/zram/zram_patch/lz4k_oplus.patch ./
        patch -p1 -F 3 < lz4k_oplus.patch || true
        CONFIG_FILE=./arch/arm64/configs/gki_defconfig
        if grep -q "CONFIG_ZSMALLOC" -- "$CONFIG_FILE"; then
          sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' "$CONFIG_FILE"
        else
          echo "CONFIG_ZRAM=y" >> "$CONFIG_FILE"
        fi
        if grep -q "CONFIG_ZSMALLOC" -- "$CONFIG_FILE"; then
          sed -i 's/CONFIG_ZSMALLOC=m/CONFIG_ZSMALLOC=y/g' "$CONFIG_FILE"
        else
          echo "CONFIG_ZSMALLOC=y" >> "$CONFIG_FILE"
        fi
        rm "android/gki_aarch64_modules"
        touch "android/gki_aarch64_modules"
        echo "CONFIG_CRYPTO_LZ4HC=y" >> "$CONFIG_FILE"
        echo "CONFIG_CRYPTO_LZ4K=y" >> "$CONFIG_FILE"
        echo "CONFIG_CRYPTO_LZ4KD=y" >> "$CONFIG_FILE"
        echo "CONFIG_CRYPTO_842=y" >> "$CONFIG_FILE"
        echo "CONFIG_ZRAM_WRITEBACK=y" >> "$CONFIG_FILE"
        
    - name: 添加 SUSFS 配置设置
      if: github.event.inputs.SUSFS == 'true'
      run: |
        cd kernel_workspace/kernel_platform
        # 添加 KSU 配置设置
        echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
        
        # 添加 VFS 配置设置
        if [[ "${{ github.event.inputs.VFS }}" == 'true' ]]; then
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
        else
          echo "CONFIG_KPROBES=y" >>  ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig
        fi
        
        # 添加 OVERLAYFS 配置设置
        if [[ "${{ github.event.inputs.KSU_VERSION }}" == 'ksu' ]]; then
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./common/arch/arm64/configs/gki_defconfig
        else
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
        fi
        
        # 添加 SUSFS 配置设置
        echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
        
        # 移除 check_defconfig
        sed -i 's/check_defconfig//' ./common/build.config.gki
        
    - name: 编译内核
      run: |
        cd kernel_workspace
        export BAZEL_BUILD_ARGS="--jobs=2 --local_ram_resources=6000 --local_cpu_resources=2"
        LTO=thin SYSTEM_DLKM_RE_SIGN=0 BUILD_SYSTEM_DLKM=0 KMI_SYMBOL_LIST_STRICT_MODE=0 ./kernel_platform/oplus/build/oplus_build_kernel.sh ${CPUD} gki -j$(nproc --all)
        # LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${CPUD} gki -j$(nproc --all)
        
    - name: kpm 补丁
      if: github.event.inputs.KPM == 'true' && github.event.inputs.KSU_VERSION == 'sukisu'
      run: |
        rm -rf kernel_workspace/kernel_platform/out/msm-kernel-${CPUD}-gki/dist
        mv kernel_workspace/kernelsu_patch/kpm/patch_linux kernel_workspace/kernel_platform/out/msm-kernel-${CPUD}-gki/gki_kernel/dist/
        cd kernel_workspace/kernel_platform/out/msm-kernel-${CPUD}-gki/gki_kernel/dist/
        chmod +x patch_linux
        ./patch_linux
        rm -f Image
        mv oImage Image
      continue-on-error: true 
        
    - name: 制作 AnyKernel3
      run: |
        mv kernel_workspace/kernel_platform/out/msm-kernel-${CPUD}-gki/gki_kernel/dist/Image kernel_workspace/AnyKernel3/
        clean_feil="${FEIL}"
        clean_feil="${clean_feil%_v}"  # 去掉结尾的 _v（如果有）
        clean_feil="${clean_feil%_u}"  # 去掉结尾的 _u（如果有）
        echo "FEIL=$clean_feil" >> $GITHUB_ENV
        echo "VALUE=${{ github.event.inputs.KPM == 'true' && '_KPM' || '' }}${{ github.event.inputs.VFS == 'true' && '_VFS' || '' }}${{ github.event.inputs.ZRAM == 'true' && '_LZ4KD' || '' }}" >> $GITHUB_ENV
      continue-on-error: true 
        
    - name: 上传 AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3_${{ github.event.inputs.KSU_VERSION }}_${{ env.KSUVER }}_${{ env.FEIL }}${{ env.VALUE }}
        path: kernel_workspace/AnyKernel3/*
      continue-on-error: true 
        
    - name: 上传 Image
      uses: actions/upload-artifact@v4
      with:
        name: Image_${{ github.event.inputs.KSU_VERSION }}_${{ env.KSUVER }}_${{ env.FEIL }}${{ env.VALUE }}
        path: kernel_workspace/AnyKernel3/Image
